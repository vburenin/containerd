syntax = "proto3";

package containerd.services.events.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/containerd/containerd/api/services/events/v1;events";

message RuntimeIO {
	string stdin = 1;
	string stdout = 2;
	string stderr = 3;
	bool terminal = 4;
}

message RuntimeMount {
	string type = 1;
	string source = 2;
	repeated string options = 3;
}

message RuntimeCreate {
	string id = 1;
	string bundle = 2;
	repeated RuntimeMount rootfs = 3 [(gogoproto.customname) = "RootFS"];
	RuntimeIO io = 4 [(gogoproto.customname) = "IO"];
	string checkpoint = 5;
}

message RuntimeEvent {
	string id = 1;
	enum EventType {
		EXIT = 0;
		OOM = 1;
		CREATE = 2;
		START = 3;
		EXEC_ADDED = 4;
		PAUSED = 5;
	}
	EventType type = 2;
	uint32 pid = 3;
	uint32 exit_status = 4;
	google.protobuf.Timestamp exited_at = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message RuntimeDelete {
	string id = 1;
	string runtime = 2;
	uint32 exit_status = 3;
	google.protobuf.Timestamp exited_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}
