package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/containerd/containerd/plapi/models"
)

// UnpackImageReader is a Reader for the UnpackImage structure.
type UnpackImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnpackImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewUnpackImageCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUnpackImageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUnpackImageCreated creates a UnpackImageCreated with default headers values
func NewUnpackImageCreated() *UnpackImageCreated {
	return &UnpackImageCreated{}
}

/*UnpackImageCreated handles this case with default header values.

Created
*/
type UnpackImageCreated struct {
	Payload string
}

func (o *UnpackImageCreated) Error() string {
	return fmt.Sprintf("[POST /snapshot/{store_name}][%d] unpackImageCreated  %+v", 201, o.Payload)
}

func (o *UnpackImageCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnpackImageDefault creates a UnpackImageDefault with default headers values
func NewUnpackImageDefault(code int) *UnpackImageDefault {
	return &UnpackImageDefault{
		_statusCode: code,
	}
}

/*UnpackImageDefault handles this case with default header values.

error
*/
type UnpackImageDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the unpack image default response
func (o *UnpackImageDefault) Code() int {
	return o._statusCode
}

func (o *UnpackImageDefault) Error() string {
	return fmt.Sprintf("[POST /snapshot/{store_name}][%d] UnpackImage default  %+v", o._statusCode, o.Payload)
}

func (o *UnpackImageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
