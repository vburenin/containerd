package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUpdateImageMetadataParams creates a new UpdateImageMetadataParams object
// with the default values initialized.
func NewUpdateImageMetadataParams() *UpdateImageMetadataParams {
	var ()
	return &UpdateImageMetadataParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateImageMetadataParamsWithTimeout creates a new UpdateImageMetadataParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateImageMetadataParamsWithTimeout(timeout time.Duration) *UpdateImageMetadataParams {
	var ()
	return &UpdateImageMetadataParams{

		timeout: timeout,
	}
}

// NewUpdateImageMetadataParamsWithContext creates a new UpdateImageMetadataParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateImageMetadataParamsWithContext(ctx context.Context) *UpdateImageMetadataParams {
	var ()
	return &UpdateImageMetadataParams{

		Context: ctx,
	}
}

// NewUpdateImageMetadataParamsWithHTTPClient creates a new UpdateImageMetadataParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateImageMetadataParamsWithHTTPClient(client *http.Client) *UpdateImageMetadataParams {
	var ()
	return &UpdateImageMetadataParams{
		HTTPClient: client,
	}
}

/*UpdateImageMetadataParams contains all the parameters to send to the API endpoint
for the update image metadata operation typically these are written to a http.Request
*/
type UpdateImageMetadataParams struct {

	/*ImageID*/
	ImageID string
	/*Meta
	  Due to the swagger limitation, this parameter represents array of metadata where even elements are the key names and the odd ones are the data

	*/
	Meta []string
	/*StoreName*/
	StoreName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update image metadata params
func (o *UpdateImageMetadataParams) WithTimeout(timeout time.Duration) *UpdateImageMetadataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update image metadata params
func (o *UpdateImageMetadataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update image metadata params
func (o *UpdateImageMetadataParams) WithContext(ctx context.Context) *UpdateImageMetadataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update image metadata params
func (o *UpdateImageMetadataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update image metadata params
func (o *UpdateImageMetadataParams) WithHTTPClient(client *http.Client) *UpdateImageMetadataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update image metadata params
func (o *UpdateImageMetadataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImageID adds the imageID to the update image metadata params
func (o *UpdateImageMetadataParams) WithImageID(imageID string) *UpdateImageMetadataParams {
	o.SetImageID(imageID)
	return o
}

// SetImageID adds the imageId to the update image metadata params
func (o *UpdateImageMetadataParams) SetImageID(imageID string) {
	o.ImageID = imageID
}

// WithMeta adds the meta to the update image metadata params
func (o *UpdateImageMetadataParams) WithMeta(meta []string) *UpdateImageMetadataParams {
	o.SetMeta(meta)
	return o
}

// SetMeta adds the meta to the update image metadata params
func (o *UpdateImageMetadataParams) SetMeta(meta []string) {
	o.Meta = meta
}

// WithStoreName adds the storeName to the update image metadata params
func (o *UpdateImageMetadataParams) WithStoreName(storeName string) *UpdateImageMetadataParams {
	o.SetStoreName(storeName)
	return o
}

// SetStoreName adds the storeName to the update image metadata params
func (o *UpdateImageMetadataParams) SetStoreName(storeName string) {
	o.StoreName = storeName
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateImageMetadataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param image_id
	qrImageID := o.ImageID
	qImageID := qrImageID
	if qImageID != "" {
		if err := r.SetQueryParam("image_id", qImageID); err != nil {
			return err
		}
	}

	if err := r.SetBodyParam(o.Meta); err != nil {
		return err
	}

	// path param store_name
	if err := r.SetPathParam("store_name", o.StoreName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
